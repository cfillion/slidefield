#!/usr/bin/env ruby

Signal.trap('INT') { abort }

require 'slidefield'
require 'optparse'

def parse_opts
  options = []

  OptionParser.new do |opts|
    opts.program_name = 'SlideField'
    opts.version = SlideField::VERSION
    opts.banner = 'Usage: slidefield [options] [file ...]'

    opts.on '-c', '--check', 'Check input only' do
      options << :check
    end

    opts.on_tail '-v', '--version', 'Show version number and copyright' do
      puts opts.ver
      puts <<GPL
Copyright (C) 2014 by Christian Fillion

    This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License as
published by the Free Software Foundation, either version 3 of
the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
General Public License for more details.
GPL
      exit
    end

    opts.on_tail '-h', '--help', 'Show this message' do
      puts opts.help
      exit
    end
  end.parse!

  options
end

begin
  options = parse_opts
rescue OptionParser::InvalidOption => e
  raise SlideField::Error, e
end

SF::Doctor.output = STDERR

files = ARGV

# read from standard input by default
files << '-' if files.empty?

files.each {|file|
  interpreter = SlideField::Interpreter.new

  if '-' == file
    interpreter.run_string STDIN.read
  else
    path = File.absolute_path file
    interpreter.run_file path
  end

  next if interpreter.failed? || options.include?(:check)

  project_root = interpreter.root

  viewer = SlideField::Viewer.new project_root
  viewer.show
}
